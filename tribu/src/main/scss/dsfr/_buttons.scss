@use "sass:list";


.btn {
  &, &:focus-visible {
    outline-color: $outline-color;
    outline-offset: $outline-size;
    outline-width: $outline-size;
  }

  &:focus-visible {
    outline-style: solid;
  }

  &[href] {
    background-image: none;
  }

  &:disabled, &.disabled, fieldset:disabled & {
    color: var(--grey-soft);
    background-color: var(--grey-light);
    opacity: 1;

    cursor: not-allowed;
    pointer-events: auto;
  }
}


.btn-primary, .btn-outline-primary {
  border-style: none;

  &, &:hover, &:focus, &:focus-visible {
    color: var(--blue-france-inverted);
  }

  &, &:focus-visible {
    background-color: var(--blue-france-strong);
    box-shadow: none;
  }

  &:hover {
    background-color: var(--blue-france-strong-hover);
  }

  &:hover {
    background-color: var(--blue-france-strong-active);
  }
}

.btn-secondary, .btn-outline-secondary {
  border-style: none;

  &, &.active, &:hover, &:focus, &:focus-visible {
    color: var(--blue-france-strong);
  }

  &, &.active, &:focus-visible {
    background-color: transparent;
    box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--blue-france-strong);
  }

  &:hover {
    background-color: var(--grey-white-hover);
  }

  &:active {
    background-color: var(--grey-white-active);
  }

  &:disabled, &.disabled, fieldset:disabled & {
    box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--grey-light);
  }
}

.btn-tertiary, .btn-outline-tertiary {
  border-style: none;

  &, &.active, &:hover, &:focus, &:focus-visible {
    color: var(--blue-france-strong);
  }

  &, &.active, &:focus-visible {
    background-color: transparent;
  }

  &:hover {
    background-color: var(--grey-white-hover);
  }

  &:active {
    background-color: var(--grey-white-active);
  }

  &.active {
    box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--blue-france-strong);
  }
}
.btn-outline-tertiary {
  &, &:focus-visible {
    box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--grey-default);
  }

  &:disabled, &.disabled, fieldset:disabled & {
    box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--grey-light);
  }
}

.btn-link {
  &, &:hover, &:focus, &:active {
    color: var(--blue-france-strong) !important;
  }

  &:hover, &:focus, &:active {
    background-color: var(--grey-white-hover) !important;
  }
}

.btn-icon {
  padding-left: map-get($spacers, 2);
  padding-right: map-get($spacers, 2);
}


$button-colors: "info", "success", "warning", "danger";

@each $state in $button-colors {
  $color: $state;
  @if $state == "danger" {
    $color: "error";
  }

  .btn-#{$state}, .btn-outline-#{$state} {
    border-style: none;

    &, &.active, &:hover, &:focus, &:focus-visible {
      color: var(--#{$color}-strong);
    }

    &, &.active, &:focus-visible {
      background-color: transparent;
      box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--#{$color}-strong);
    }

    &:hover {
      background-color: var(--grey-white-hover);
    }

    &:active {
      background-color: var(--grey-white-active);
    }

    &:disabled, &.disabled, fieldset:disabled & {
      box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--grey-light);
    }
  }
}


.btn-close {
  display: flex;
  gap: map-get($spacers, 1);

  height: auto;
  width: auto;

  background-color: transparent;
  background-image: none;
  border-style: none;
  filter: none !important;
  font-size: $font-size-sm;

  &::after {
    $url: glyphicons-url("basic", 599, "menu-close");

    content: "";

    height: $glyphicons-size;
    width: $glyphicons-size;

    mask-position: center;
    -webkit-mask-position: center;
    mask-repeat: no-repeat;
    -webkit-mask-repeat: no-repeat;
    mask-size: contain;
    -webkit-mask-size: contain;
    mask-image: url("#{$url}");
    -webkit-mask-image: url("#{$url}");

    background-color: currentColor;
  }

  &, &:hover, &:focus {
    color: var(--blue-france-strong);
    opacity: 1;
  }

  &:hover {
    background-color: var(--grey-white-hover);
  }

  [aria-hidden="true"] {
    display: none;
  }
}


.btn-check {
  &[type="radio"] {
    + .btn {
      display: flex;
      align-items: center;
      gap: map-get($spacers, 1);
      position: relative;

      min-height: $line-height-computed-base + map-get($spacers, 2) * 2 + map-get($spacers, 4) * 2;

      padding: map-get($spacers, 2) map-get($spacers, 3) map-get($spacers, 2) (map-get($spacers, 3) * 2 + map-get($spacers, 4));

      color: var(--grey-black) !important;
      background-color: var(--grey-white) !important;
      box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--grey-default);

      &:hover {
        background-color: var(--grey-white-hover) !important;
      }

      &:active {
        background-color: var(--grey-white-active) !important;
      }

      &::before {
        content: "";
        display: block;
        position: absolute;
        top: calc(50% - map-get($spacers, 2));
        left: map-get($spacers, 4) + map-get($spacers, 1);
        height: map-get($spacers, 3);
        width: map-get($spacers, 3);

        border-radius: 50%;
        box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--grey-black), inset 0 0 0 map-get($spacers, 2) var(--grey-white);
      }
    }

    &:checked {
      + .btn {
        box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--blue-france-strong);

        &::before {
          box-shadow: inset 0 0 0 map-get($border-widths, 1) var(--grey-black), inset 0 0 0 map-get($spacers, 1) var(--grey-white), inset 0 0 0 map-get($spacers, 2) var(--blue-france-strong);
        }
      }
    }
  }
}
